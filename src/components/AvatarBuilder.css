.builder-root {
  display: flex;
  flex-direction: column;
  width: 420px;
  height: 900px;
  margin: 0 auto;
  background: var(--panel);
  border: var(--border);
  border-radius: var(--r-md);
  /* Allow vertical scrolling; keep horizontal clipped */
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  box-shadow: var(--shadow-strong);

}

.builder-hero {
  position: relative;
  height: 415px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  /* clip the arc frame */
  background: var(--panel);
  /* outside the arc */
  /* Arc geometry (shared by fill, outline and clipping) */
  --arc-radius: 100%;
  /* half of width -> 140% circle width */
  --arc-top: -103.5%;
  /* move circle up to create a smile */
  --arc-center-y: calc(var(--arc-radius) + var(--arc-top));
}

/* Bottom curved fill (behind avatar) revealing the panel background */
.builder-hero::after {
  content: "";
  position: absolute;
  left: 50%;
  top: var(--arc-top);
  /* controls arc height (smiling) */
  width: calc(2 * var(--arc-radius));
  aspect-ratio: 1 / 1;
  /* perfect circle */
  transform: translateX(-50%);
  background: var(--hero-bg, var(--primary));
  border-radius: 50%;
  z-index: 1;
  /* behind avatar */
}

.avatarCreator-logo {
  height: 120px;
  transform: translateY(-10px);
}


.builder-title {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  width: 100%;
  top: 35px;
  text-align: center;

  z-index: 4;
  pointer-events: none;
}

.builder-preview {
  inset: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: transparent;
  animation: fade-in 250ms, fade-out 250ms ease;
  position: relative;
  /* enable z-index */
  z-index: 2;
  /* above the fill */
  /* Clip avatar to the same smiling circle */
  clip-path: circle(var(--arc-radius) at 50% var(--arc-center-y));
  transform: translateY(8px);
  /* raise slightly so avatar stays inside */
}

/* Directly scale the SVG avatar a touch, anchored to top, without
   affecting layout or the clip-path geometry on the preview */
.builder-preview .avatar {
  width: 100%;
  height: 100%;
  transform: scale(var(--avatar-scale, 0.75)) translateY(130px);
  transform-origin: center top;
}

/* Arc outline drawn above avatar (transparent fill) */
.builder-hero::before {
  content: "";
  position: absolute;
  left: 50%;
  top: var(--arc-top);
  width: calc(2 * var(--arc-radius));
  aspect-ratio: 1 / 1;
  transform: translateX(-50%);
  background: transparent;
  border-radius: 50%;
  box-shadow: 0 0 0 var(--bd-2) var(--outline);
  pointer-events: none;
  z-index: 3;
  /* on top so the stroke is visible */
}

.builder-body {
  padding: 16px;
}

.builder-name {
  width: 100%;
  padding: 12px 16px;
  border-radius: var(--r-lg);
  border: var(--bd-1) solid var(--outline);
  box-shadow: var(--shadow);
  outline: none;
  font-size: 14px;
  margin-bottom: 12px;
}



.container-tilesnswatches {
  height: 320px;
  overflow-y: none;
  scrollbar-width: none;
}

.swatch-row {
  display: flex;
  align-content: center;
  justify-content: center;
  gap: 15px;
  margin-bottom: 12px;
  animation: fade-in 250ms, fade-out 250ms ease;
}

@media (max-width: 560px) {
  .swatch-row {
    gap: 12px;
    margin-bottom: 10px;
    flex-wrap: wrap;
  }
}


.tiles-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 12px;
}

/* Horizontal scroller for selections */
.hscroll {
  display: flex;
  gap: var(--space);
  overflow-x: auto;
  padding-bottom: 6px;
  scroll-snap-type: x proximity;
}

.hscroll::-webkit-scrollbar {
  height: 8px;
}

.hscroll::-webkit-scrollbar-thumb {
  background: var(--muted);
  border-radius: 8px;
}

.hscroll::-webkit-scrollbar-track {
  background: transparent;
}

/* show exactly 6 tiles in view */
.hscroll .tile {
  flex: 0 0 calc((100% - 5 * var(--space)) / 6);
  scroll-snap-align: start;
  animation: fade-in 250ms, fade-out 250ms ease;
}



/* Column pager (3 columns x 2 rows, step = 1 column) */
/* Column pager styles are centralized in ColumnPager.css */

.details-row {
  display: flex;
  gap: 16px;
  align-items: center;
  padding: 8px 0;
}

.chk input {
  margin-right: 6px;
}

.section-title {
  font-weight: 800;
  margin: 10px 0 6px;
}

.save-row {
  display: flex;
  justify-content: center;
  margin-top: var(--space-lg);
}

/* Base mobile (≤560px) — full set of properties */
/* Notes inside the code are in English */
@media (max-width: 560px) {
  .App {
    /* keep only once at the widest mobile breakpoint */
    padding: 0 !important;

  }

  .builder-root {
    width: 100dvw;
    height: 100dvh;
    margin: 0;
    border: none;
    border-radius: 0;
    box-shadow: none;
    overflow-y: scroll;
    display: flex;
  }

  .builder-hero {
    height: 100dvw;
    aspect-ratio: 1 / 1;
    --arc-radius: 145dvw;
    --arc-top: -190dvw;
    overflow: visible;
  }

  .builder-body {
    padding: 10px;
  }

  .builder-title {
    width: 80%;
  }

  .avatarCreator-logo {
    height: 25dvw;
  }

  .title-text {
    font-size: 46pt;
  }

  .container-tilesnswatches {
    height: auto;
  }

  .builder-preview {
    transform: translateY(0.4vh);
    width: 80%;
  }

  .builder-preview .avatar {
    transform: scale(var(--avatar-scale, 1)) translateY(15dvw);
  }
}


/* Smallest phones (≤426px) — only actual changes */
@media (max-width: 325px) {

  .builder-hero {
    --arc-radius: 140dvw;
    --arc-top: -180dvw;
  }



  .title-text {
    font-size: 28pt;
  }


  .builder-preview .avatar {
    transform: scale(var(--avatar-scale, 0.87)) translateY(25dvw);
  }
}